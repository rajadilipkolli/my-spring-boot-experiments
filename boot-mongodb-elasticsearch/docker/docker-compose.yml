services:
  mongodb:
    hostname: mongodb
    image: mongo:8.0.6
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: |
        mongosh --eval "try { rs.status().ok } catch (e) { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }] }).ok }"
      interval: 10s
      start_period: 30s
    command: ["/usr/bin/mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
#      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
#      - ME_CONFIG_MONGODB_ADMINPASSWORD=passcode
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xmx2048m -Xms2048m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.4
    restart: always
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ./elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    links:
      - elasticsearch

volumes:
  mongodb:
  esdata:
    driver: local
