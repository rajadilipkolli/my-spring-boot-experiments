/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.r2dbc.dbgen.tables.records;

import com.example.jooq.r2dbc.dbgen.tables.PostComments;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PostCommentsRecord extends UpdatableRecordImpl<PostCommentsRecord>
        implements Record4<UUID, String, OffsetDateTime, UUID> {

    private static final long serialVersionUID = 1L;

    /** Setter for <code>public.post_comments.id</code>. */
    public void setId(UUID value) {
        set(0, value);
    }

    /** Getter for <code>public.post_comments.id</code>. */
    public UUID getId() {
        return (UUID) get(0);
    }

    /** Setter for <code>public.post_comments.content</code>. */
    public void setContent(String value) {
        set(1, value);
    }

    /** Getter for <code>public.post_comments.content</code>. */
    public String getContent() {
        return (String) get(1);
    }

    /** Setter for <code>public.post_comments.created_at</code>. */
    public void setCreatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /** Getter for <code>public.post_comments.created_at</code>. */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /** Setter for <code>public.post_comments.post_id</code>. */
    public void setPostId(UUID value) {
        set(3, value);
    }

    /** Getter for <code>public.post_comments.post_id</code>. */
    public UUID getPostId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, OffsetDateTime, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, OffsetDateTime, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return PostComments.POST_COMMENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return PostComments.POST_COMMENTS.CONTENT;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return PostComments.POST_COMMENTS.CREATED_AT;
    }

    @Override
    public Field<UUID> field4() {
        return PostComments.POST_COMMENTS.POST_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public OffsetDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public UUID component4() {
        return getPostId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public OffsetDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public UUID value4() {
        return getPostId();
    }

    @Override
    public PostCommentsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PostCommentsRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public PostCommentsRecord value3(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PostCommentsRecord value4(UUID value) {
        setPostId(value);
        return this;
    }

    @Override
    public PostCommentsRecord values(
            UUID value1, String value2, OffsetDateTime value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /** Create a detached PostCommentsRecord */
    public PostCommentsRecord() {
        super(PostComments.POST_COMMENTS);
    }

    /** Create a detached, initialised PostCommentsRecord */
    public PostCommentsRecord(UUID id, String content, OffsetDateTime createdAt, UUID postId) {
        super(PostComments.POST_COMMENTS);

        setId(id);
        setContent(content);
        setCreatedAt(createdAt);
        setPostId(postId);
        resetChangedOnNotNull();
    }
}
